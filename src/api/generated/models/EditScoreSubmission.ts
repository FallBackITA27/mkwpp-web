/* tslint:disable */
/* eslint-disable */
/**
 * Mario Kart Wii Players\' Page API
 * The brains of the Mario Kart Wii Players\' Page.
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { StatusEnum } from './StatusEnum';
import {
    StatusEnumFromJSON,
    StatusEnumFromJSONTyped,
    StatusEnumToJSON,
} from './StatusEnum';
import type { ScoreBasic } from './ScoreBasic';
import {
    ScoreBasicFromJSON,
    ScoreBasicFromJSONTyped,
    ScoreBasicToJSON,
} from './ScoreBasic';
import type { UserWithPlayer } from './UserWithPlayer';
import {
    UserWithPlayerFromJSON,
    UserWithPlayerFromJSONTyped,
    UserWithPlayerToJSON,
} from './UserWithPlayer';

/**
 * 
 * @export
 * @interface EditScoreSubmission
 */
export interface EditScoreSubmission {
    /**
     * 
     * @type {number}
     * @memberof EditScoreSubmission
     */
    readonly id: number;
    /**
     * 
     * @type {ScoreBasic}
     * @memberof EditScoreSubmission
     */
    readonly score: ScoreBasic;
    /**
     * 
     * @type {number}
     * @memberof EditScoreSubmission
     */
    scoreId: number;
    /**
     * 
     * @type {boolean}
     * @memberof EditScoreSubmission
     */
    readonly videoLinkEdited: boolean;
    /**
     * 
     * @type {string}
     * @memberof EditScoreSubmission
     */
    videoLink?: string | null;
    /**
     * 
     * @type {boolean}
     * @memberof EditScoreSubmission
     */
    readonly ghostLinkEdited: boolean;
    /**
     * 
     * @type {string}
     * @memberof EditScoreSubmission
     */
    ghostLink?: string | null;
    /**
     * 
     * @type {boolean}
     * @memberof EditScoreSubmission
     */
    readonly commentEdited: boolean;
    /**
     * 
     * @type {string}
     * @memberof EditScoreSubmission
     */
    comment?: string | null;
    /**
     * 
     * @type {StatusEnum}
     * @memberof EditScoreSubmission
     */
    readonly status: StatusEnum;
    /**
     * 
     * @type {UserWithPlayer}
     * @memberof EditScoreSubmission
     */
    readonly submittedBy: UserWithPlayer;
    /**
     * 
     * @type {Date}
     * @memberof EditScoreSubmission
     */
    readonly submittedAt: Date;
    /**
     * 
     * @type {string}
     * @memberof EditScoreSubmission
     */
    submitterNote?: string | null;
    /**
     * 
     * @type {UserWithPlayer}
     * @memberof EditScoreSubmission
     */
    readonly reviewedBy: UserWithPlayer;
    /**
     * 
     * @type {Date}
     * @memberof EditScoreSubmission
     */
    readonly reviewedAt: Date | null;
    /**
     * 
     * @type {string}
     * @memberof EditScoreSubmission
     */
    readonly reviewerNote: string | null;
}



/**
 * Check if a given object implements the EditScoreSubmission interface.
 */
export function instanceOfEditScoreSubmission(value: object): value is EditScoreSubmission {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('score' in value) || value['score'] === undefined) return false;
    if (!('scoreId' in value) || value['scoreId'] === undefined) return false;
    if (!('videoLinkEdited' in value) || value['videoLinkEdited'] === undefined) return false;
    if (!('ghostLinkEdited' in value) || value['ghostLinkEdited'] === undefined) return false;
    if (!('commentEdited' in value) || value['commentEdited'] === undefined) return false;
    if (!('status' in value) || value['status'] === undefined) return false;
    if (!('submittedBy' in value) || value['submittedBy'] === undefined) return false;
    if (!('submittedAt' in value) || value['submittedAt'] === undefined) return false;
    if (!('reviewedBy' in value) || value['reviewedBy'] === undefined) return false;
    if (!('reviewedAt' in value) || value['reviewedAt'] === undefined) return false;
    if (!('reviewerNote' in value) || value['reviewerNote'] === undefined) return false;
    return true;
}

export function EditScoreSubmissionFromJSON(json: any): EditScoreSubmission {
    return EditScoreSubmissionFromJSONTyped(json, false);
}

export function EditScoreSubmissionFromJSONTyped(json: any, ignoreDiscriminator: boolean): EditScoreSubmission {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'score': ScoreBasicFromJSON(json['score']),
        'scoreId': json['score_id'],
        'videoLinkEdited': json['video_link_edited'],
        'videoLink': json['video_link'] == null ? undefined : json['video_link'],
        'ghostLinkEdited': json['ghost_link_edited'],
        'ghostLink': json['ghost_link'] == null ? undefined : json['ghost_link'],
        'commentEdited': json['comment_edited'],
        'comment': json['comment'] == null ? undefined : json['comment'],
        'status': StatusEnumFromJSON(json['status']),
        'submittedBy': UserWithPlayerFromJSON(json['submitted_by']),
        'submittedAt': (new Date(json['submitted_at'])),
        'submitterNote': json['submitter_note'] == null ? undefined : json['submitter_note'],
        'reviewedBy': UserWithPlayerFromJSON(json['reviewed_by']),
        'reviewedAt': (json['reviewed_at'] == null ? null : new Date(json['reviewed_at'])),
        'reviewerNote': json['reviewer_note'],
    };
}

export function EditScoreSubmissionToJSON(value?: Omit<EditScoreSubmission, 'id'|'score'|'video_link_edited'|'ghost_link_edited'|'comment_edited'|'status'|'submitted_by'|'submitted_at'|'reviewed_by'|'reviewed_at'|'reviewer_note'> | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'score_id': value['scoreId'],
        'video_link': value['videoLink'],
        'ghost_link': value['ghostLink'],
        'comment': value['comment'],
        'submitter_note': value['submitterNote'],
    };
}

