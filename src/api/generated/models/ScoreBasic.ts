/* tslint:disable */
/* eslint-disable */
/**
 * Mario Kart Wii Players\' Page API
 * The brains of the Mario Kart Wii Players\' Page.
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CategoryEnum } from './CategoryEnum';
import {
    CategoryEnumFromJSON,
    CategoryEnumFromJSONTyped,
    CategoryEnumToJSON,
} from './CategoryEnum';

/**
 * 
 * @export
 * @interface ScoreBasic
 */
export interface ScoreBasic {
    /**
     * 
     * @type {number}
     * @memberof ScoreBasic
     */
    readonly id: number;
    /**
     * Finish time in milliseconds (e.g. 69999 for 1:09.999).
     * @type {number}
     * @memberof ScoreBasic
     */
    value: number;
    /**
     * 
     * @type {number}
     * @memberof ScoreBasic
     */
    player: number;
    /**
     * 
     * @type {number}
     * @memberof ScoreBasic
     */
    track: number;
    /**
     * 
     * @type {CategoryEnum}
     * @memberof ScoreBasic
     */
    category: CategoryEnum;
    /**
     * Off for 3lap, on for flap.
     * @type {boolean}
     * @memberof ScoreBasic
     */
    isLap?: boolean;
    /**
     * 
     * @type {Date}
     * @memberof ScoreBasic
     */
    date?: Date;
    /**
     * 
     * @type {string}
     * @memberof ScoreBasic
     */
    videoLink?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ScoreBasic
     */
    ghostLink?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ScoreBasic
     */
    comment?: string | null;
}



/**
 * Check if a given object implements the ScoreBasic interface.
 */
export function instanceOfScoreBasic(value: object): value is ScoreBasic {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('value' in value) || value['value'] === undefined) return false;
    if (!('player' in value) || value['player'] === undefined) return false;
    if (!('track' in value) || value['track'] === undefined) return false;
    if (!('category' in value) || value['category'] === undefined) return false;
    return true;
}

export function ScoreBasicFromJSON(json: any): ScoreBasic {
    return ScoreBasicFromJSONTyped(json, false);
}

export function ScoreBasicFromJSONTyped(json: any, ignoreDiscriminator: boolean): ScoreBasic {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'value': json['value'],
        'player': json['player'],
        'track': json['track'],
        'category': CategoryEnumFromJSON(json['category']),
        'isLap': json['is_lap'] == null ? undefined : json['is_lap'],
        'date': json['date'] == null ? undefined : (new Date(json['date'])),
        'videoLink': json['video_link'] == null ? undefined : json['video_link'],
        'ghostLink': json['ghost_link'] == null ? undefined : json['ghost_link'],
        'comment': json['comment'] == null ? undefined : json['comment'],
    };
}

export function ScoreBasicToJSON(value?: Omit<ScoreBasic, 'id'> | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'value': value['value'],
        'player': value['player'],
        'track': value['track'],
        'category': CategoryEnumToJSON(value['category']),
        'is_lap': value['isLap'],
        'date': value['date'] == null ? undefined : ((value['date']).toISOString().substring(0,10)),
        'video_link': value['videoLink'],
        'ghost_link': value['ghostLink'],
        'comment': value['comment'],
    };
}

